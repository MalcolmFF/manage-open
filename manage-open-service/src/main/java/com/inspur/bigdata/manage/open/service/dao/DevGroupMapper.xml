<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inspur.bigdata.manage.open.service.dao.DevGroupMapper">

	<resultMap id="devGroupMap" type="com.inspur.bigdata.manage.open.service.data.DevGroup">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="userId" column="userId" />
		<result property="description" column="description" />
		<result property="create_time" column="create_time" />
		<result property="update_time" column="update_time" />
		<result property="context" column="context" />
	</resultMap>

	<insert id="insert" parameterType="com.inspur.bigdata.manage.open.service.data.DevGroup">
		INSERT INTO api_developer_group (
		    id,
		    name,
		    userId,
		    description,
		    create_time,
		    update_time,
		    context
		) VALUES (
		    #{id},
		    #{name},
		    #{userId},
		    #{description},
		    #{create_time},
		    #{update_time},
		    #{context}

		)
	</insert>

	<update id="update" parameterType="com.inspur.bigdata.manage.open.service.data.DevGroup">
		UPDATE 
		    api_developer_group
		SET 
		    name = #{name},
		    update_time = #{update_time},
		    description = #{description},
		    context = #{context}
		WHERE
		    id = #{id }
	</update>

	<delete id="deletebyId" parameterType="string">
		DELETE FROM
		    api_developer_group
		WHERE
		    id = #{id }
	</delete>

	<select id="getById" parameterType="string" resultMap="devGroupMap">
		SELECT * FROM api_developer_group WHERE  id = #{id}
	</select>

	<select id="isRegisted" parameterType="string" resultMap="devGroupMap">
		SELECT * FROM api_developer_group WHERE userId=#{0} and name = #{1}
	</select>
	<select id="isExistedContext" parameterType="string" resultMap="devGroupMap">
		SELECT * FROM api_developer_group WHERE  context = #{0}
	</select>

	<select id="getGroupList" parameterType="map" resultMap="devGroupMap">
		select * from api_developer_group where 1=1
		<if test="name != null">
			and  name like '%${name}%'
		</if>
		<if test="userId!=null and userId!=''">
			and userId=#{userId}
		</if>
		<if test="context!=null and context!=''">
			and context=#{context}
		</if>
	</select>

</mapper>